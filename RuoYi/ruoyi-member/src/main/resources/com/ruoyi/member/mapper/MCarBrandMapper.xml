<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.member.mapper.MCarBrandMapper">
    
    <resultMap type="MCarBrand" id="MCarBrandResult">
        <result property="carBrandId"    column="car_brand_id"    />
        <result property="brandId"    column="brand_id"    />
        <result property="number"    column="number"    />
    </resultMap>

    <sql id="selectMCarBrandVo">
        select car_brand_id, brand_id, number from m_car_brand
    </sql>

    <select id="selectMCarBrandList" parameterType="MCarBrand" resultMap="MCarBrandResult">
        <include refid="selectMCarBrandVo"/>
        <where>  
            <if test="brandId != null  and brandId != ''"> and brand_id = #{brandId}</if>
            <if test="number != null "> and number = #{number}</if>
        </where>
    </select>
    
    <select id="selectMCarBrandById" parameterType="Long" resultMap="MCarBrandResult">
        <include refid="selectMCarBrandVo"/>
        where car_brand_id = #{carBrandId}
    </select>
        
    <insert id="insertMCarBrand" parameterType="MCarBrand" useGeneratedKeys="true" keyProperty="carBrandId">
        insert into m_car_brand
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="brandId != null  and brandId != ''">brand_id,</if>
            <if test="number != null ">number,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="brandId != null  and brandId != ''">#{brandId},</if>
            <if test="number != null ">#{number},</if>
         </trim>
    </insert>

    <update id="updateMCarBrand" parameterType="MCarBrand">
        update m_car_brand
        <trim prefix="SET" suffixOverrides=",">
            <if test="brandId != null  and brandId != ''">brand_id = #{brandId},</if>
            <if test="number != null ">number = #{number},</if>
        </trim>
        where car_brand_id = #{carBrandId}
    </update>

    <delete id="deleteMCarBrandById" parameterType="Long">
        delete from m_car_brand where car_brand_id = #{carBrandId}
    </delete>

    <delete id="deleteMCarBrandByIds" parameterType="String">
        delete from m_car_brand where car_brand_id in 
        <foreach item="carBrandId" collection="array" open="(" separator="," close=")">
            #{carBrandId}
        </foreach>
    </delete>
    
</mapper>